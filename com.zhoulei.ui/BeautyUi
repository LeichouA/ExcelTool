package com.zhoulei.ui;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;

import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;

public class BeautyUi implements ActionListener, ItemListener{
	
	private JTextField text1;
	private JTextField text2;
	private JTextField text3;
	private JTextField text4;
	private JButton  button1;
	private JButton  button2;
	private JButton  button3;
	private String PathA;
	private String PathB;
	private String mates;
	private String transfer;
	private int i;
	private int j;
	private JComboBox<String> comboBox1;
	private JComboBox<String> comboBox2;
	public BeautyUi() {
		ImageIcon icon= new ImageIcon("image5.jpg");
		JLabel lb = new JLabel(icon);// 把背景图片显示在一个标签里面
	  // 把标签的大小位置设置为图片刚好填充整个面板
		lb.setBounds(0, 0, icon.getIconWidth(),icon.getIconHeight());
		JFrame frame = new JFrame("Excel工具");
		frame.getLayeredPane().add(lb,new Integer(Integer.MIN_VALUE));
		//获取frame的顶层容器,并设置为透明
		JPanel j=(JPanel)frame.getContentPane();
		j.setOpaque(false);
        /* 创建面板，这个类似于 HTML 的 div 标签
         * 我们可以创建多个面板并在 JFrame 中指定位置
         * 面板中我们可以添加文本字段，按钮及其他组件。
         */
        JPanel panel = new JPanel();
        UIManager.put("ToolBar.isPaintPlainBackground", Boolean.TRUE);
        panel.setOpaque(false);//也要让他透明
        panel.setLayout(null);//为了使用按钮的定位
        frame.add(panel);
        panel.setLayout(null);    
        //第一行
        // 创建 JLabel
        JLabel label1 = new JLabel("路径1:");
        label1.setForeground(Color.black);
        label1.setBounds(10,20,40,25);
        panel.add(label1);  
        /* 这个方法定义了组件的位置。
         * setBounds(x, y, width, height)
         * x 和 y 指定左上角的新位置，由 width 和 height 指定新的大小。
         */
        /* 
         * 创建文本域用于用户输入
         */
        text1 = new JTextField(20);
        text1.setBounds(60,20,235,25);
        panel.add(text1); 
        //选择按钮1
        button2 = new JButton("浏览");
        button2.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.green));
        button2.setBounds(305,20,50, 25);
        panel.add(button2);
        button2.addActionListener(this);
        
        JLabel label3 = new JLabel("Sheet:");
        label3.setForeground(Color.black);
        label3.setBounds(370,20,40,25);
        panel.add(label3);
 
        comboBox1=new JComboBox<String>();
        comboBox1.setBounds(405, 20, 75, 25);
        panel.add(comboBox1);
        comboBox1.addActionListener(this);
        comboBox1.addItemListener(this);
        

        //第二行
        // 输入文本域2
        JLabel label2 = new JLabel("路径2");
        label2.setForeground(Color.black);
        label2.setBounds(10,50,80,25);
        panel.add(label2);
        /* 
         *这个类似用于输入的文本域
         * 但是输入的信息会以点号代替，用于包含密码的安全性
         */
        text2 = new JTextField(20);
        text2.setBounds(60,50,235,25);
        panel.add(text2);
        //选择按钮2
        button3 = new JButton("浏览");
        button3.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.green));
        button3.setBounds(305,50, 50, 25);
        panel.add(button3);
        button3.addActionListener(this);
        
        JLabel label4= new JLabel("Sheet:");
        label4.setForeground(Color.black);
        label4.setBounds(370,50,40,25);
        panel.add(label4);
        
        comboBox2=new JComboBox<String>();
        comboBox2.setBounds(405,50, 75, 25);
        panel.add(comboBox2);
        comboBox2.addActionListener(this);
        comboBox2.addItemListener(this);
        
        //匹配行
        JLabel label5 = new JLabel("匹配:");
        label5.setFont(new Font("Dialog", 1, 15));
        label5.setForeground(Color.red);
        label5.setBounds(100,100,40,25);
        panel.add(label5);
       
        text3 = new JTextField(20);
        text3.setBounds(142,100,235,25);
        panel.add(text3);
        
        JLabel label6 = new JLabel("赋值:");
        label6.setFont(new Font("Dialog", 1, 15));
        label6.setForeground(Color.red);
        label6.setBounds(100,150,40,25);
        panel.add(label6);
       
        text4 = new JTextField(20);
        text4.setBounds(142,150,235,25);
        panel.add(text4);
        
        /* 这个方法定义了组件的位置。
         * setBounds(x, y, width, height)
         * x 和 y 指定左上角的新位置，由 width 和 height 指定新的大小。
         */
        /* 
         * 创建文本域用于用户输入
         */
        // 创建登录按钮
        button1 = new JButton("运行");
        button1.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        button1.setBounds(200, 200, 80,43);
        panel.add(button1);
        button1.addActionListener(this);

        // 设置界面可见
        
        // Setting the width and height of frame
        frame.setSize(500, 312);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
	}

    public void actionPerformed(ActionEvent e) {
    	if(e.getSource().equals(button2)){
    		JFileChooser fd = new JFileChooser();  
   	 		fd.showOpenDialog(null);  
   	 		File f = fd.getSelectedFile();
   	 		if(f != null){
   	 			comboBox1.removeAllItems();
   	 			PathA = f.getAbsolutePath();
   	 			System.out.println(PathA);
   	 			text1.setText(PathA);
   	 			new Thread(new Runnable() {
   	   	 			public void run() {
   	   	   	 			String[] sheetNames=CarryData.getSheetNames(PathA);
   	   	   	 			System.out.println(sheetNames[0]);
   	   	   	 			for(int i=0;i<sheetNames.length;i++) {
   	   	   	 			comboBox1.addItem(sheetNames[i]);
   	   	   	 			}
   	   	 			}
   	 			}).start();	

   	 			
   	 		}else{
   	 			JOptionPane.showMessageDialog(null,"请选择正确的文件excel1","提示",JOptionPane.WARNING_MESSAGE);
   	 		}
   		 return;
      	 }else if(e.getSource().equals(button3)) {
      		JFileChooser fd = new JFileChooser();  
   	 		fd.showOpenDialog(null);  
   	 		File f = fd.getSelectedFile();
   	 		if(f != null){
   	 			comboBox2.removeAllItems();
   	 			PathB = f.getAbsolutePath();
   	 			System.out.println(PathB);
   	 			text2.setText(PathB);
   	 			new Thread(new Runnable() {
   	   	 			public void run() {
   	   	   	 			String[] sheetNames=CarryData.getSheetNames(PathB);
   	   	   	 			System.out.println(sheetNames[0]);
   	   	   	 			for(int i=0;i<sheetNames.length;i++) {
   	   	   	 			comboBox2.addItem(sheetNames[i]);
   	   	   	 			}
   	   	 			}
   	 			}).start();
   	 		}else{
   	 			JOptionPane.showMessageDialog(null,"请选择正确的文件excel1","提示",JOptionPane.WARNING_MESSAGE);
   	 		}
   		 return;
      	 }else if(e.getSource().equals(button1)) {
      		 if(text3.getText()!=null&&text4.getText()!=null) {
         		 mates=text3.getText();
          		 transfer=text4.getText(); 
      		 }else {
      			JOptionPane.showMessageDialog(null,"请输入覆盖范围~","错误",JOptionPane.ERROR_MESSAGE);
      		 }
     		 if(text1.getText().equals("")){
    			 JOptionPane.showMessageDialog(null,"请输入excel1路径~","错误",JOptionPane.ERROR_MESSAGE);
    			 text1.grabFocus();
    		 }else if (text2.getText().equals("")){
    			 JOptionPane.showMessageDialog(null,"请输入excel2路径~","错误",JOptionPane.ERROR_MESSAGE);
    			 text2.grabFocus();
    		 }else if (text3.getText().equals("")){
    			 JOptionPane.showMessageDialog(null,"请输入覆盖范围~","错误",JOptionPane.ERROR_MESSAGE);
    			 text3.grabFocus();
    		 }else if (text4.getText().equals("")){
    			 JOptionPane.showMessageDialog(null,"请输入条件范围~","错误",JOptionPane.ERROR_MESSAGE);
    			 text4.grabFocus();
    		 }
     		 CarryData carryData= new CarryData();
     		 transfer  tran=new transfer();
     		 tran.setMap(mates);
     		 tran.setTransfer(transfer);
     	  	 Map<Integer,Integer> map=tran.getMap();
     	  	 List<Integer> list=tran.getList();
     	  	 carryData.carry(PathA, PathB, i, j, map, list);
     	  	 List<List> list2=carryData.getList2();
     	  	 try {
				carryData.newExcel(list2,PathA);
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
     	  	JOptionPane.showMessageDialog(null, "新文件生成成功！");
    		     		 
      	 }
    }

	@Override
	public void itemStateChanged(ItemEvent e) {
		
		if (e.getSource().equals(comboBox1)&&e.getStateChange() == ItemEvent.SELECTED) {
			String text=(String) comboBox1.getSelectedItem();
			i=comboBox1.getSelectedIndex();

		}else if(e.getSource().equals(comboBox2)&&e.getStateChange() == ItemEvent.SELECTED){
			String text=(String) comboBox2.getSelectedItem();
			j=comboBox2.getSelectedIndex();
		}
			
	}
    
    
}
